package net.divinerpg.client.render.entity.vanilla.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelKingCrab extends ModelBase {

	ModelRenderer body;
	ModelRenderer lside1;
	ModelRenderer lside2;
	ModelRenderer lside3;
	ModelRenderer leye;
	ModelRenderer reye;
	ModelRenderer lside4;
	ModelRenderer lside5;
	ModelRenderer rside1;
	ModelRenderer rside2;
	ModelRenderer rside3;
	ModelRenderer rside4;
	ModelRenderer rside5;
	ModelRenderer larm;
	ModelRenderer lleg1;
	ModelRenderer llegb1;
	ModelRenderer lleg2;
	ModelRenderer lleg3;
	ModelRenderer llegb2;
	ModelRenderer llegb3;
	ModelRenderer lclaw1;
	ModelRenderer lclaw2;
	ModelRenderer lclaw3;
	ModelRenderer rleg1;
	ModelRenderer rleg2;
	ModelRenderer rleg3;
	ModelRenderer rlegb1;
	ModelRenderer rlegb2;
	ModelRenderer rlegb3;
	ModelRenderer lmouth;
	ModelRenderer rmouth;
	ModelRenderer rarm;
	ModelRenderer rclaw1;
	ModelRenderer rclaw2;
	ModelRenderer rclaw3;

	public ModelKingCrab() {
		textureWidth = 64;
		textureHeight = 64;

		body = new ModelRenderer(this, 0, 0);
		body.addBox(-5F, -1F, -5F, 10, 3, 10);
		body.setRotationPoint(0F, 18F, 0F);
		body.setTextureSize(64, 64);
		body.mirror = true;
		setRotation(body, 0F, 0F, 0F);
		lside1 = new ModelRenderer(this, 0, 13);
		lside1.addBox(0F, -0.5F, -1.3F, 2, 2, 4);
		lside1.setRotationPoint(5F, 18F, 0F);
		lside1.setTextureSize(64, 64);
		lside1.mirror = true;
		setRotation(lside1, 0F, 0F, 0F);
		lside2 = new ModelRenderer(this, 0, 19);
		lside2.addBox(-3F, -1F, -3.3F, 3, 2, 4);
		lside2.setRotationPoint(7F, 18.5F, -2F);
		lside2.setTextureSize(64, 64);
		lside2.mirror = true;
		setRotation(lside2, 0F, 0.6632251F, 0F);
		lside3 = new ModelRenderer(this, 0, 25);
		lside3.addBox(0F, -1F, -3F, 3, 2, 3);
		lside3.setRotationPoint(2.5F, 18.5F, 2F);
		lside3.setTextureSize(64, 64);
		lside3.mirror = true;
		setRotation(lside3, 0F, -0.9773844F, 0F);
		leye = new ModelRenderer(this, 0, 30);
		leye.addBox(0F, -2F, 0F, 1, 2, 1);
		leye.setRotationPoint(1F, 18F, -5F);
		leye.setTextureSize(64, 64);
		leye.mirror = true;
		setRotation(leye, 0.2617994F, 0F, 0F);
		reye = new ModelRenderer(this, 5, 30);
		reye.addBox(-1F, -2F, 0F, 1, 2, 1);
		reye.setRotationPoint(-1F, 18F, -5F);
		reye.setTextureSize(64, 64);
		reye.mirror = true;
		setRotation(reye, 0.2617994F, 0F, 0F);
		lside4 = new ModelRenderer(this, 0, 33);
		lside4.addBox(0F, -1F, -1F, 4, 2, 2);
		lside4.setRotationPoint(6F, 18.5F, -1F);
		lside4.setTextureSize(64, 64);
		lside4.mirror = true;
		setRotation(lside4, 0F, -0.4886922F, 0F);
		lside5 = new ModelRenderer(this, 0, 37);
		lside5.addBox(-0.5F, -1F, 0F, 3, 2, 2);
		lside5.setRotationPoint(6F, 18.5F, 1F);
		lside5.setTextureSize(64, 64);
		lside5.mirror = true;
		setRotation(lside5, 0F, 0.4886922F, 0F);
		rside1 = new ModelRenderer(this, 0, 41);
		rside1.addBox(-2F, -1F, -1.7F, 2, 2, 4);
		rside1.setRotationPoint(-5F, 18.5F, 0F);
		rside1.setTextureSize(64, 64);
		rside1.mirror = true;
		setRotation(rside1, 0F, 0F, 0F);
		rside2 = new ModelRenderer(this, 0, 47);
		rside2.addBox(0F, -1F, -3.3F, 3, 2, 4);
		rside2.setRotationPoint(-7F, 18.5F, -2F);
		rside2.setTextureSize(64, 64);
		rside2.mirror = true;
		setRotation(rside2, 0F, -0.6632251F, 0F);
		rside3 = new ModelRenderer(this, 0, 53);
		rside3.addBox(-5F, -1F, -1F, 4, 2, 2);
		rside3.setRotationPoint(-5F, 18.5F, -2F);
		rside3.setTextureSize(64, 64);
		rside3.mirror = true;
		setRotation(rside3, 0F, 0.4886922F, 0F);
		rside4 = new ModelRenderer(this, 0, 57);
		rside4.addBox(-2.5F, -1F, 0F, 3, 2, 2);
		rside4.setRotationPoint(-6F, 18.5F, 0.5F);
		rside4.setTextureSize(64, 64);
		rside4.mirror = true;
		setRotation(rside4, 0F, -0.5585054F, 0F);
		rside5 = new ModelRenderer(this, 12, 13);
		rside5.addBox(-3F, -1F, -3F, 3, 2, 3);
		rside5.setRotationPoint(-3.5F, 18.5F, 1F);
		rside5.setTextureSize(64, 64);
		rside5.mirror = true;
		setRotation(rside5, 0F, 0.9948377F, 0F);
		larm = new ModelRenderer(this, 14, 18);
		larm.addBox(0F, -1F, -1F, 6, 2, 2);
		larm.setRotationPoint(4F, 19F, -4F);
		larm.setTextureSize(64, 64);
		larm.mirror = true;
		setRotation(larm, 0F, 0.5061455F, 0F);
		lleg1 = new ModelRenderer(this, 14, 22);
		lleg1.addBox(0F, -1F, -1F, 3, 2, 2);
		lleg1.setRotationPoint(4F, 19F, -2F);
		lleg1.setTextureSize(64, 64);
		lleg1.mirror = true;
		setRotation(lleg1, 0F, 0.2268928F, 0.6283185F);
		llegb1 = new ModelRenderer(this, 12, 26);
		llegb1.addBox(1F, 1.5F, 0F, 1, 4, 1);
		llegb1.setRotationPoint(4F, 19F, -2F);
		llegb1.setTextureSize(64, 64);
		llegb1.mirror = true;
		setRotation(llegb1, 0F, 0.4537856F, -0.1745329F);
		lleg2 = new ModelRenderer(this, 12, 31);
		lleg2.addBox(0F, -1F, -1F, 3, 2, 2);
		lleg2.setRotationPoint(5F, 19F, 0F);
		lleg2.setTextureSize(64, 64);
		lleg2.mirror = true;
		setRotation(lleg2, 0F, 0F, 0.6283185F);
		lleg3 = new ModelRenderer(this, 12, 35);
		lleg3.addBox(0F, -1F, -1F, 3, 2, 2);
		lleg3.setRotationPoint(4F, 19F, 2F);
		lleg3.setTextureSize(64, 64);
		lleg3.mirror = true;
		setRotation(lleg3, 0F, -0.2268928F, 0.6283185F);
		llegb2 = new ModelRenderer(this, 12, 39);
		llegb2.addBox(1F, 0.5F, -0.5F, 1, 5, 1);
		llegb2.setRotationPoint(5F, 19F, 0F);
		llegb2.setTextureSize(64, 64);
		llegb2.mirror = true;
		setRotation(llegb2, 0F, 0F, -0.1745329F);
		llegb3 = new ModelRenderer(this, 16, 26);
		llegb3.addBox(1F, 1.5F, -1F, 1, 4, 1);
		llegb3.setRotationPoint(4F, 19F, 2F);
		llegb3.setTextureSize(64, 64);
		llegb3.mirror = true;
		setRotation(llegb3, 0F, -0.4537856F, -0.1745329F);
		lclaw1 = new ModelRenderer(this, 16, 39);
		lclaw1.addBox(3.5F, -1.5F, -4F, 3, 3, 4);
		lclaw1.setRotationPoint(4F, 19F, -4F);
		lclaw1.setTextureSize(64, 64);
		lclaw1.mirror = true;
		setRotation(lclaw1, 0F, 0.3665191F, 0F);
		lclaw2 = new ModelRenderer(this, 14, 46);
		lclaw2.addBox(4F, -1.3F, -7F, 2, 2, 4);
		lclaw2.setRotationPoint(4F, 19F, -4F);
		lclaw2.setTextureSize(64, 64);
		lclaw2.mirror = true;
		setRotation(lclaw2, 0F, 0.3665191F, 0F);
		lclaw3 = new ModelRenderer(this, 14, 52);
		lclaw3.addBox(4.5F, 0.6F, -6F, 1, 1, 4);
		lclaw3.setRotationPoint(4F, 19F, -4F);
		lclaw3.setTextureSize(64, 64);
		lclaw3.mirror = true;
		setRotation(lclaw3, 0F, 0.3665191F, 0F);
		rleg1 = new ModelRenderer(this, 10, 57);
		rleg1.addBox(-3F, -1F, -1F, 3, 2, 2);
		rleg1.setRotationPoint(-4F, 19F, -2F);
		rleg1.setTextureSize(64, 64);
		rleg1.mirror = true;
		setRotation(rleg1, 0F, -0.2268928F, -0.6283185F);
		rleg2 = new ModelRenderer(this, 24, 14);
		rleg2.addBox(-3F, -1F, -1F, 3, 2, 2);
		rleg2.setRotationPoint(-5F, 19F, 0F);
		rleg2.setTextureSize(64, 64);
		rleg2.mirror = true;
		setRotation(rleg2, 0F, 0F, -0.6283185F);
		rleg3 = new ModelRenderer(this, 24, 22);
		rleg3.addBox(-3F, -1F, -1F, 3, 2, 2);
		rleg3.setRotationPoint(-4F, 19F, 2F);
		rleg3.setTextureSize(64, 64);
		rleg3.mirror = true;
		setRotation(rleg3, 0F, 0.2268928F, -0.6283185F);
		rlegb1 = new ModelRenderer(this, 20, 26);
		rlegb1.addBox(-2F, 1.5F, 0F, 1, 4, 1);
		rlegb1.setRotationPoint(-4F, 19F, -2F);
		rlegb1.setTextureSize(64, 64);
		rlegb1.mirror = true;
		setRotation(rlegb1, 0F, -0.4537856F, 0.1745329F);
		rlegb2 = new ModelRenderer(this, 24, 26);
		rlegb2.addBox(-2F, 0.5F, -0.5F, 1, 5, 1);
		rlegb2.setRotationPoint(-5F, 19F, 0F);
		rlegb2.setTextureSize(64, 64);
		rlegb2.mirror = true;
		setRotation(rlegb2, 0F, 0F, 0.1745329F);
		rlegb3 = new ModelRenderer(this, 28, 26);
		rlegb3.addBox(-2F, 1.5F, -1F, 1, 4, 1);
		rlegb3.setRotationPoint(-4F, 19F, 2F);
		rlegb3.setTextureSize(64, 64);
		rlegb3.mirror = true;
		setRotation(rlegb3, 0F, 0.4537856F, 0.1745329F);
		lmouth = new ModelRenderer(this, 22, 32);
		lmouth.addBox(-2F, -1F, -1F, 2, 2, 1);
		lmouth.setRotationPoint(2F, 19F, -4F);
		lmouth.setTextureSize(64, 64);
		lmouth.mirror = true;
		setRotation(lmouth, 0F, -0.3839724F, 0F);
		rmouth = new ModelRenderer(this, 22, 35);
		rmouth.addBox(0F, -1F, -1F, 2, 2, 1);
		rmouth.setRotationPoint(-2F, 19F, -4F);
		rmouth.setTextureSize(64, 64);
		rmouth.mirror = true;
		setRotation(rmouth, 0F, 0.3839724F, 0F);
		rarm = new ModelRenderer(this, 20, 57);
		rarm.addBox(-6F, -1F, -1F, 6, 2, 2);
		rarm.setRotationPoint(-4F, 19F, -4F);
		rarm.setTextureSize(64, 64);
		rarm.mirror = true;
		setRotation(rarm, 0F, -0.5061455F, 0F);
		rclaw1 = new ModelRenderer(this, 40, 0);
		rclaw1.addBox(-7F, -1.5F, -4F, 3, 3, 4);
		rclaw1.setRotationPoint(-4F, 19F, -4F);
		rclaw1.setTextureSize(64, 64);
		rclaw1.mirror = true;
		setRotation(rclaw1, 0F, -0.3665191F, 0F);
		rclaw2 = new ModelRenderer(this, 40, 7);
		rclaw2.addBox(-6.5F, -1.3F, -7F, 2, 2, 4);
		rclaw2.setRotationPoint(-4F, 19F, -4F);
		rclaw2.setTextureSize(64, 64);
		rclaw2.mirror = true;
		setRotation(rclaw2, 0F, -0.3665191F, 0F);
		rclaw3 = new ModelRenderer(this, 34, 13);
		rclaw3.addBox(-6F, 0.6F, -6F, 1, 1, 4);
		rclaw3.setRotationPoint(-4F, 19F, -4F);
		rclaw3.setTextureSize(64, 64);
		rclaw3.mirror = true;
		setRotation(rclaw3, 0F, -0.3665191F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		body.render(f5);
		lside1.render(f5);
		lside2.render(f5);
		lside3.render(f5);
		leye.render(f5);
		reye.render(f5);
		lside4.render(f5);
		lside5.render(f5);
		rside1.render(f5);
		rside2.render(f5);
		rside3.render(f5);
		rside4.render(f5);
		rside5.render(f5);
		larm.render(f5);
		lleg1.render(f5);
		llegb1.render(f5);
		lleg2.render(f5);
		lleg3.render(f5);
		llegb2.render(f5);
		llegb3.render(f5);
		lclaw1.render(f5);
		lclaw2.render(f5);
		lclaw3.render(f5);
		rleg1.render(f5);
		rleg2.render(f5);
		rleg3.render(f5);
		rlegb1.render(f5);
		rlegb2.render(f5);
		rlegb3.render(f5);
		lmouth.render(f5);
		rmouth.render(f5);
		rarm.render(f5);
		rclaw1.render(f5);
		rclaw2.render(f5);
		rclaw3.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
	}
}